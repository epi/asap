// asap6502.ci - player routines for the 6502 CPU
//
// Copyright (C) 2011-2023  Piotr Fusik
//
// This file is part of ASAP (Another Slight Atari Player),
// see http://asap.sourceforge.net
//
// ASAP is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published
// by the Free Software Foundation; either version 2 of the License,
// or (at your option) any later version.
//
// ASAP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty
// of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with ASAP; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

static class ASAP6502
{
	internal static byte[]? GetPlayerRoutine(ASAPInfo info)
	{
		switch (info.Type) {
		case ASAPModuleType.Cmc: return resource<byte[]>("cmc.obx");
		case ASAPModuleType.Cm3: return resource<byte[]>("cm3.obx");
		case ASAPModuleType.Cmr: return resource<byte[]>("cmr.obx");
		case ASAPModuleType.Cms: return resource<byte[]>("cms.obx");
		case ASAPModuleType.Dlt: return resource<byte[]>("dlt.obx");
		case ASAPModuleType.Mpt: return resource<byte[]>("mpt.obx");
		case ASAPModuleType.Rmt: return info.GetChannels() == 1 ? resource<byte[]>("rmt4.obx") : resource<byte[]>("rmt8.obx");
		case ASAPModuleType.Tmc: return resource<byte[]>("tmc.obx");
		case ASAPModuleType.Tm2: return resource<byte[]>("tm2.obx");
		case ASAPModuleType.Fc:  return resource<byte[]>("fc.obx");
		default: return null;
		}
	}
}
